from uuid import uuid4
from bolt_expressions import Scoreboard, Data
from mecha import Mecha
import inspect
from contextlib import contextmanager

mc = ctx.inject(Mecha)

def selector(value):
  return mc.parse(value, using="selector")

def generate_helper_function_unique_name(name="") -> str:
    if not name:
        return f"hod:_helpers/{uuid4()}"
    else:
        return f"hod:_helpers/{uuid4()}_{name}"
        

def debug_say(txt):
    debug_mode = Scoreboard.objective("hod.debug")
    if debug_mode["@p"]:
        tellraw @p [{text:"Debug >>> ",italic:true,color:"gray"},{text: txt, italic: false, color: "white"}]

DEBUG = Scoreboard.objective("hod.debug")["@s"]

def reduce_item_stack(select="@s", amount=1):
    item_data = Data.entity(select)
    if item_data.Item.count <= amount:
        kill selector(select)
    else:
        item_data.Item.count -= amount

