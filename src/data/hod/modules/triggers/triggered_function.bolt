from uuid import uuid4
from bolt import Runtime
from bolt_expressions import Scoreboard
from functools import cache
from contextlib import contextmanager

@cache
def tfunc_score(function_name):
    return function_name.replace(":", ".").replace("/", "__")

ticking_functions = []


@contextmanager
def triggered_function_cm(function_name):
    ticking_functions.append(function_name.get_value())
    function function_name:
        yield

def generate_trigger_tickers():
    for func in ticking_functions:
        fname = f"{func}_ticker_{str(uuid4())[:4]}"
        function fname:
            execute as @p[scores={tfunc_score(func)=1..}]:
                function func
                Scoreboard.objective(tfunc_score(func))["@s"] = 0
                scoreboard players enable @s tfunc_score(func)

        function fname
        
def generate_trigger_scoreboards():
    for func in ticking_functions:
        scoreboard objectives add tfunc_score(func) trigger
        scoreboard players enable @a tfunc_score(func)


macro tfunc fname=minecraft:function body=mecha:nested_root:
    with triggered_function_cm(fname):
        yield body